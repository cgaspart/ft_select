/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.c                                             :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: cgaspart <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2018/06/12 07:31:33 by cgaspart          #+#    #+#             */
/*   Updated: 2018/06/19 14:12:57 by cgaspart         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ft_select.h"

int  my_outc(int c)
{
	ft_putchar((char)c);
	return (1);
}

int  voir_touche()
{
	char buffer[3];
	
	while (1)
	{
		read(0, buffer, 3);
		ft_putstr("\nCase 0: ");
		ft_putnbr(buffer[0]);
		ft_putstr("\nCase 1: ");
		ft_putnbr(buffer[1]);
		ft_putstr("\nCase 2: ");
		ft_putnbr(buffer[2]);
		if (buffer[0] == 27)
			ft_putstr("\nC'est une fleche ! \n");
		else if (buffer[0] == 4)
		{
			ft_putstr("\nCtrl+d, on quitte ! \n");
			return (0);
		}
	}
	   return (0);
}

int	test()
{
	char    *res;
 
/*
** on appel la fonction tgetstr qui va remplis un char * avec les différentes
** instructions à réaliser pour réaliser notre demande. Ici il s'agit de "cl".
*/
	res = tgetstr("cm", area); 
/*
** On utilise tputs pour réaliser les instructions contenues dans notre char *res.
** Cette fonction prend en dernier paramètre un pointeur sur fonction. On doit donc lui donner le nom
** d'une fonction prototypé ainsi : int my_outc(int c). et qui contiendra pour tout code : my_putchar(c);
*/
	tputs(tgot(res, pos_x, pos_y), 1, my_outc);
	voir_touche();
	return (1);
}

int		main()
{
	char *name_term;
	struct termios term;

	if ((name_term = getenv("TERM")) == NULL)
		return (-1);
	if (tgetent(NULL, name_term) == -1)
		return (-1);
	if (tcgetattr(0, &term) == -1)
		return (-1);
	test();
	return (0);
}
